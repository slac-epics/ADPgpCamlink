#
# ClinkFeb rogue PVs
#
# Required macros:
#	P				- Prefix for generic rogue PGP register access
#	R				- Region, example, :Ch0:
#	B				- Board number
#	L				- Lane number
# Optional macros
#	TIMEOUT			- Defaults to 1 sec
#

# Feb$(F)
record( longin, "$(P)$(R)Feb$(F):FpgaVersion" )
{
	field( DESC, "FEB FPGA Version (show as hex)" )
	field( DTYP, "RogueLI" )
	field( INP, "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].AxiVersion.FpgaVersion" )
	field( PINI, "YES" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
	info( archiveFields,  "VAL" )
	info( autosaveFields, "" )
}

record( longin, "$(P)$(R)Feb$(F):UpTime" )
{
	field( DTYP, "RogueLI" )
	field( INP, "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].AxiVersion.UpTimeCnt" )
	field( EGU, "sec" )
	field( SCAN, "$(SCAN=1 second)" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
	info( autosaveFields, "" )
}

# TODO Use mbbi w/ enumerated baud rates
record( longin, "$(P)$(R)Feb$(F):BaudRate_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].BaudRate" )
	field( EGU,  "bps" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
	info( autosaveFields, "" )
}

# TODO Use mbbo w/ enumerated baud rates
record( longout, "$(P)$(R)Feb$(F):BaudRate" )
{
#	field( TPRO, "2" )
	field( DTYP, "RogueLO" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].BaudRate" )
	field( EGU,  "bps" )
	field( DOL,  "57600" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)Feb$(F):BaudRate_RBV" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
	info( autosaveFields, "" )
}

# CameraLink Mode
# 0: 'Disable', 1: 'Base', 2: 'Medium', 3: 'Full', 4: 'Deca'
record( mbbi, "$(P)$(R)Feb$(F):LinkMode_RBV" )
{
	field( DTYP, "RogueMBBI" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].LinkMode" )
	field( ZRVL, "0" ) field( ZRST, "Disable" )
	field( ONVL, "1" ) field( ONST, "Base" )
	field( TWVL, "2" ) field( TWST, "Medium" )
	field( THVL, "3" ) field( THST, "Full" )
	field( FRVL, "4" ) field( FRST, "Deca" )
	field( PINI, "YES" )
#	field( SCAN, "$(SCAN=1 second)" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

# CameraLink Mode
# 0: 'Disable', 1: 'Base', 2: 'Medium', 3: 'Full', 4: 'Deca'
record( mbbo, "$(P)$(R)Feb$(F):LinkMode" )
{
	field( DTYP, "RogueMBBO" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].LinkMode" )
	field( DOL,  "1" )
	field( PINI, "YES" )
	field( ZRVL, "0" ) field( ZRST, "Disable" )
	field( ONVL, "1" ) field( ONST, "Base" )
	field( TWVL, "2" ) field( TWST, "Medium" )
	field( THVL, "3" ) field( THST, "Full" )
	field( FRVL, "4" ) field( FRST, "Deca" )
	field( FLNK, "$(P)$(R)Feb$(F):LinkMode_RBV" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

# Camlink Data Mode (# bits per pixel)
# 0: 'None', 1: '8Bit', 2: '10Bit', 3: '12Bit',
# 4: '14Bit', 5: '16Bit', 6: '24Bit', 7: '30Bit', 8: '36Bit' 
record( mbbi, "$(P)$(R)Feb$(F):DataMode_RBV" )
{
	field( DTYP, "RogueMBBI" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].DataMode" )
	field( ZRVL, "0" ) field( ZRST, "None" )
	field( ONVL, "1" ) field( ONST, "8 Bit" )
	field( TWVL, "2" ) field( TWST, "10 Bit" )
	field( THVL, "3" ) field( THST, "12 Bit" )
	field( FRVL, "4" ) field( FRST, "14 Bit" )
	field( FVVL, "5" ) field( FVST, "16 Bit" )
	field( SXVL, "6" ) field( SXST, "24 Bit" )
	field( SVVL, "7" ) field( SVST, "30 Bit" )
	field( EIVL, "8" ) field( EIST, "36 Bit" )
	field( PINI, "YES" )
#	field( SCAN, "$(SCAN=1 second)" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

# Camlink Data Mode (# bits per pixel)
# 0: 'None', 1: '8Bit', 2: '10Bit', 3: '12Bit',
# 4: '14Bit', 5: '16Bit', 6: '24Bit', 7: '30Bit', 8: '36Bit' 
record( mbbo, "$(P)$(R)Feb$(F):DataMode" )
{
	field( DTYP, "RogueMBBO" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].DataMode" )
	field( DOL,  "3" )
	field( PINI, "YES" )
	field( ZRVL, "0" ) field( ZRST, "None" )
	field( ONVL, "1" ) field( ONST, "8 Bit" )
	field( TWVL, "2" ) field( TWST, "10 Bit" )
	field( THVL, "3" ) field( THST, "12 Bit" )
	field( FRVL, "4" ) field( FRST, "14 Bit" )
	field( FVVL, "5" ) field( FVST, "16 Bit" )
	field( SXVL, "6" ) field( SXST, "24 Bit" )
	field( SVVL, "7" ) field( SVST, "30 Bit" )
	field( EIVL, "8" ) field( EIST, "36 Bit" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
	field( FLNK, "$(P)$(R)Feb$(F):DataMode_RBV" )
}

# Camlink Frame Mode
# 0: 'None', 1: 'Line', 2: 'Frame'
record( mbbi, "$(P)$(R)Feb$(F):FrameMode_RBV" )
{
	field( DTYP, "RogueMBBI" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].FrameMode" )
	field( ZRVL, "0" ) field( ZRST, "None" )
	field( ONVL, "1" ) field( ONST, "Line" )
	field( TWVL, "2" ) field( TWST, "Frame" )
	field( PINI, "YES" )
#	field( SCAN, "$(SCAN=1 second)" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

# Camlink Frame Mode
# 0: 'None', 1: 'Line', 2: 'Frame'
record( mbbo, "$(P)$(R)Feb$(F):FrameMode" )
{
	field( DTYP, "RogueMBBO" )
	field( DOL,  "2" )
	field( PINI, "YES" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].FrameMode" )
	field( ZRVL, "0" ) field( ZRST, "None" )
	field( ONVL, "1" ) field( ONST, "Line" )
	field( TWVL, "2" ) field( TWST, "Frame" )
	field( DISV, "0" )
	field( FLNK, "$(P)$(R)Feb$(F):FrameMode_RBV" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

record( longin, "$(P)$(R)Feb$(F):SerThrottle_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].SerThrottle" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
	info( autosaveFields, "" )
}

record( longout, "$(P)$(R)Feb$(F):SerThrottle" )
{
	field( DTYP, "RogueLO" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].SerThrottle" )
	field( DOL,  "10000" )
	field( EGU,  "usec" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)Feb$(F):SerThrottle_RBV" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
	info( autosaveFields, "VAL" )
}

record( longin, "$(P)$(R)Feb$(F):TapCount_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].TapCount" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

record( longout, "$(P)$(R)Feb$(F):TapCount" )
{
	field( DTYP, "RogueLO" )
	field( DOL,  "2" )
	field( PINI, "YES" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].TapCount" )
	field( FLNK, "$(P)$(R)Feb$(F):TapCount_RBV" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

record( longin, "$(P)$(R)Feb$(F):Rate_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].TrigCtrl[0].TrigRate" )
	field( SCAN, "$(SCAN=1 second)" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
	info( autosaveFields, "" )
}

record( mbbi, "$(P)$(R)Feb$(F):Map_RBV" )
{
	field( DTYP, "RogueMBBI" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].TrigCtrl[0].TrigMap" )
	field( ZRVL, "0" ) field( ZRST, "ChA" )
	field( ONVL, "1" ) field( ONST, "ChB" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

record( mbbo, "$(P)$(R)Feb$(F):Map" )
{
	field( DTYP, "RogueMBBO" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].TrigCtrl[0].TrigMap" )
	field( ZRVL, "0" ) field( ZRST, "ChA" )
	field( ONVL, "1" ) field( ONST, "ChB" )
	field( DOL,  "0" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)Feb$(F):Map_RBV" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

record( longin, "$(P)$(R)Feb$(F):TrigMask_RBV" )
{
	field( DESC, "Sets trigger mask on 4-bit camCtrl bus" )
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].TrigCtrl[0].TrigMask" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

record( longout, "$(P)$(R)Feb$(F):TrigMask" )
{
	field( DESC, "Sets trigger mask on 4-bit camCtrl bus" )
	field( DTYP, "RogueLO" )
	field( DOL,  "1" )
	field( PINI, "YES" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].TrigCtrl[0].TrigMask" )
	field( FLNK, "$(P)$(R)Feb$(F):TrigMask_RBV" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

record( longin, "$(P)$(R)Feb$(F):PulseWidthRaw_RBV" )
{
	field( DTYP, "RogueLI" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].TrigCtrl[0].TrigPulseWidthRaw" )
	field( EGU,  "1/125MHz" )
	field( FLNK, "$(P)$(R)Feb$(F):PulseWidth_RBVCalc" )
	field( SCAN, "$(SCAN=1 second)" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

record( calcout, "$(P)$(R)Feb$(F):PulseWidth_RBVCalc" )
{
	field( INPA, "$(P)$(R)Feb$(F):PulseWidthRaw_RBV" )
	field( CALC, "(A + 1) * 0.008" )
	field( OUT,  "$(P)$(R)Feb$(F):PulseWidth_RBV CPP MS" )
	field( EGU,  "1/125MHz" )
	field( FLNK, "$(P)$(R)Feb$(F):PulseWidth_RBV" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
	info( autosaveFields, "" )
}

record( longin, "$(P)$(R)Feb$(F):PulseWidth_RBV" )
{
	field( INP,  "$(P)$(R)Feb$(F):PulseWidth_RBVCalc" )
	field( EGU,  "usec" )
}

record( longout, "$(P)$(R)Feb$(F):PulseWidthRaw" )
{
	field( DTYP, "RogueLO" )
	field( OUT,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].TrigCtrl[0].TrigPulseWidthRaw" )
	field( DOL,  "4095" )
#	field( EGU,  "usec?" )
	field( EGU,  "1/125MHz" )
	field( FLNK, "$(P)$(R)Feb$(F):PulseWidthRaw_RBV" )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
	info( autosaveFields, "" )
}

record( calcout, "$(P)$(R)Feb$(F):PulseWidthCalc" )
{
	field( INPA, "$(P)$(R)Feb$(F):PulseWidth" )
	field( CALC, "MAX(0,(A/0.008)-1)" )
	field( OUT,  "$(P)$(R)Feb$(F):PulseWidthRaw PP MS" )
	field( EGU,  "1/125MHz" )
	info( autosaveFields, "" )
}

record( longout, "$(P)$(R)Feb$(F):PulseWidth" )
{
	field( EGU,  "usec" )
	field( DOL,  "1000" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)Feb$(F):PulseWidthCalc" )
	info( autosaveFields, "VAL" )
}

record( bi, "$(P)$(R)Feb$(F):Running" )
{
	field( DTYP, "RogueBI" )
	field( INP,  "@B$(B) L$(L) ClinkDevRoot.ClinkFeb[$(F)].ClinkTop.Ch[0].Running" )
	field( SCAN, "$(SCAN=1 second)" )
	field( ZNAM, "Stopped" )
	field( ONAM, "Running"  )
	field( ZSV,  "MAJOR" )
	field( OSV,  "NO_ALARM"  )
	field( DISV, "0" )
	field( SDIS, "$(P)$(R)PgpMon:RxRemLinkReady_RBV CP" )
}

