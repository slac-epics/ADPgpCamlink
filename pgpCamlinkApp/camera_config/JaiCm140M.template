#
# EPICS database for
# JAI CM-140M-CL Camera
#
# Required macros:
#	P			PV prefix part 1 $P$R
#	R			PV prefix part 2 $P$R
#	PGP_PV		PV prefix for rogue register PVs
#	PGP_LANE	PGP_LANE number 0-3
#

record( stringin, "$(P)$(R)CamModel" )
{
	field( VAL,  "JaiCm140M" )
	field( PINI, "YES" )
}

record( stringin, "$(P)$(R)CamModelScreen" )
{
	field( VAL,  "ADPgpCamlinkScreens/JaiCm140M.edl" )
	field( PINI, "YES" )
}

# Camlink settings
record( longout, "$(P)$(R)CamlinkPixelClk" )
{
	field( DOL,  "40" )
}
record( longout, "$(P)$(R)CamlinkBaudRate" )
{
	field( DOL,  "9600" )
	field( OMSL, "closed_loop" )
	field( HIGH, "9601" )
	field( HSV,  "MINOR" )
	field( LOW,  "9599" )
	field( LSV,  "MINOR" )
	field( PINI, "YES" )
}
record( mbbo, "$(P)$(R)CamlinkDataMode" )
{
	field( DOL,  "2" ) # 10 Bit
	field( ONSV, "MINOR" )
	field( THSV, "MINOR" )
	field( PINI, "YES" )
}
record( mbbo, "$(P)$(R)CamlinkFrameMode" )
{
	field( DOL,  "2" )
	field( THSV, "MINOR" )
	field( ONSV, "MINOR" )
	field( PINI, "YES" )
}
record( mbbo, "$(P)$(R)CamlinkLinkMode" )
{
	field( DOL,  "1" )
	field( TWSV, "MINOR" )
	field( ZRSV, "MINOR" )
	field( PINI, "YES" )
}
record( longout, "$(P)$(R)CamlinkHTap" )
{
	field( DOL,  "1" )
	field( HIGH, "2" )
	field( HSV,  "MINOR" )
	field( LOW,  "0" )
	field( LSV,  "MINOR" )
	field( PINI, "YES" )
}
record( longout, "$(P)$(R)CamlinkTrigMask" )
{
	field( DOL,  "1" )	# Trigger on CC1
#	field( OMSL, "closed_loop" )
	field( PINI, "YES" )
}
record( bo, "$(P)$(R)CamlinkInvCC" )
{
	field( DOL,  "1" )
	field( PINI, "YES" )
}

# Provide defaults for ADCore SizeX and SizeY
record( longout, "$(P)$(R)SizeX" )
{
	field( DOL, "1380" )
}
record( longout, "$(P)$(R)SizeY" )
{
	field( DOL, "1040" )
}
record( longout, "$(P)$(R)CamlinkHActive" )
{
	field( VAL, "1380" )
}
record( longout, "$(P)$(R)CamlinkVActive" )
{
	field( VAL, "1040" )
}
record( longout, "$(P)$(R)CamlinkHSkip" )
{
	field( VAL, "0" )
}
record( longout, "$(P)$(R)CamlinkVSkip" )
{
	field( VAL, "0" )
}

record( ao, "$(P)$(R)Gain" )
{
	field( HOPR,	"100.0" )
	field( LOPR,	"0.0" )
	field( EGU,     "%" )
	field( PREC,    "2" )
	field( FLNK,	"$(P)$(R)CamGain" )
}
record( ao, "$(P)$(R)CamGain" )
{
	field( DOL,		"$(P)$(R)Gain" )
	field( OMSL,	"closed_loop" )
	field( HOPR,	"100.0" )
	field( LOPR,	"0.0" )
	field( EGU,     "%" )
	field( PREC,    "2" )
	field( FLNK,	"$(P)$(R)JaiCalcGain" )
	info( autosaveFields, "VAL" )
}
record( calc, "$(P)$(R)JaiCalcGain" )
{
	field( INPA, "$(P)$(R)CamGain NPP NMS" )
	field( CALC, "A*1023/100" )
	field( FLNK, "$(P)$(R)JaiGain" )
	field( PREC, "2" )
}
record( ao, "$(P)$(R)JaiGain" )
{
	field( DESC,	"Camera gain (0..1023)" )
	field( DOL,		"$(P)$(R)JaiCalcGain" )
	field( OMSL,	"closed_loop" )
	field( DTYP,	"stream" )
	field( OUT,		"@JaiCm140M.proto SetGain $(PORT).SER" )
	field( DRVH,	"1023" )
	field( DRVL,	"0" )
	field( HOPR,	"1023" )
	field( LOPR,	"0" )
	field( PREC,    "0" )
	field( FLNK,	"$(P)$(R)JaiGain_RBV" )
}

record( longin,	"$(P)$(R)JaiGain_RBV" )
{
	field( DESC,	"Gain from camera report" )
	field( DTYP,	"stream" )
	field( INP,		"@JaiCm140M.proto ReadGain $(PORT).SER" )
#	field( SCAN,	"I/O Intr" )
    field( FLNK,	"$(P)$(R)JaiCalcGain_RBV" )
}
record( calcout, "$(P)$(R)JaiCalcGain_RBV" )
{
	field( INPA, "$(P)$(R)JaiGain_RBV NPP NMS" )
	field( CALC, "A*100/1023" )
	field( OUT,  "$(P)$(R)CamGain_RBV PP MS" )
	field( PREC, "2" )
}
record( ao, "$(P)$(R)CamGain_RBV" )
{
#	field( TPRO, 2 )
	field( EGU,  "%" )
	field( PREC, "2" )
	field( OUT,  "$(P)$(R)Gain_RBV PP MS" )
}

record( ao, "$(P)$(R)CamAcquireTime" )
{
#	field( TPRO, 2 )
	field( PREC, "5" )
#	field( FLNK, "$(P)$(R)JaiAcquireTimeFanout" )
	field( FLNK, "$(P)$(R)JaiShutter_ASub" )
}
record( calc, "$(P)$(R)JaiAcquireTimeSelect" )
{
#	field( TPRO, 2 )
	field( INPA, "$(P)$(R)TriggerMode CPP NMS" )
	field( CALC, "A+1" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)JaiAcquireTimeFanout" )
}
record( fanout, "$(P)$(R)JaiAcquireTimeFanout" )
{
#	field( TPRO, 2 )
	field( DESC, "Selects AcquireTime cmd" )
	field( SELL, "$(P)$(R)JaiAcquireTimeSelect PP" )
	field( SELM, "Specified" )
	field( LNK1, "$(P)$(R)JaiFreeRunShutter" )
	field( LNK2, "$(P)$(R)JaiTrigShutter" )
	field( LNK3, "$(P)$(R)JaiPulseShutter" )
#	field( FLNK, "$(P)$(R)JaiGetAcquireTime" )
}

# JaiCm140M Normal mode (FreeRun) shutter select codes
#	0	1/15		66.6ms	= 8.33*2**3
#	1	1/30		33.3ms	= 8.33*2**2
#	2	1/60		16.6ms	= 8.33*2**1
#	3	1/125		8ms		= 0.25*2**5
#	4	1/250		4ms		= 0.25*2**4
#	5	1/500		2ms		= 0.25*2**3
#	6	1/1000		1ms		= 0.25*2**2
#	7	1/2000		500us	= 0.25*2**1
#	8	1/3000		333us
#	9	1/4000		250us	= 0.25*2**0
#	10	1/5000		200us
#	11	1/6000		166us
#	12	1/7500		133us
#	13	1/10000		100us
#	14	1/15000		 66us
#	15	1/31000		 32us
# TODO: Create a C function for this and use an asub record
record( calcout,	"$(P)$(R)JaiFreeRunShutter" )
{
	field( DESC, "Calc Normal Shutter Select" )
	field( INPA, "$(P)$(R)CamAcquireTime NPP MS" )
	field( INPB, "0.06666" )
	field( INPC, "0.03333" )
	field( INPD, "0.01666" )
	field( INPE, "0.00800" )
	field( INPF, "0.00400" )
	field( INPG, "0.00200" )
	field( INPH, "0.00100" )
	field( CALC, "A>B?0:(A>C?1:(A>D?2:(A>E?3:(A>F?4:(A>G?5:6)))))" )
	field( OUT,  "$(P)$(R)JaiRawShutterSpeed PP" )
}

# JaiCm140M Async mode (Triggered) shutter select codes
#	1	1/60		16.6ms
#	2	1/125		8ms
#	3	1/250		4ms
#	4	1/500		2ms
#	5	1/1000		1ms
#	6	1/2000		500us
#	7	1/3000		333us
#	8	1/4000		250us
#	9	1/5000		200us
#	10	1/6000		166us
#	11	1/7500		133us
#	12	1/10000		100us
#	13	1/15000		 66us
#	14	1/31000		 32us
# TODO: Create a C function for this and use an asub record
record( calcout,	"$(P)$(R)JaiTrigShutter" )
{
	field( DESC, "Calc Trig Shutter Select" )
	field( INPA, "$(P)$(R)CamAcquireTime NPP MS" )
	field( INPB, "0.01666" )
	field( INPC, "0.00800" )
	field( INPD, "0.00400" )
	field( INPE, "0.00200" )
	field( INPF, "0.00100" )
	field( INPG, "0.00050" )
	field( INPH, "0.000333" )
	field( CALC, "A>B?1:(A>C?2:(A>D?3:(A>E?4:(A>F?5:(A>G?6:7)))))" )
	field( OUT,	 "$(P)$(R)JaiRawShutterSpeed PP" )
}

record( calcout,	"$(P)$(R)JaiPulseShutter" )
{
	field( DESC, "Calc Pulse Width Shutter Select" )
	field( INPA, "$(P)$(R)CamAcquireTime NPP NMS"  )
	field( INPB, "$(PW_SCALE=1e9)"  )
	field( CALC, "A*B" )
	field( OUT,  "$(PGP):Ch$(PGP_LANE):Feb$(PGP_LANE):PulseWidth CA NMS" )
	field( PREC, "0" )
	field( EGU,  "ns" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC VAL" )
}

record( calcout, "$(P)$(R)JaiCalcShutterOut" )
{
	field( DESC,	"Calc shtr val" )
	field( INPA,	"$(P)$(R)JaiShutter CPP" )
	field( INPB,	"$(P)$(R)JaiRawShutterMode_RBV CPP" )
	field( CALC,	"B ? A : (A>2?A-1:1)" )
	field( OUT,		"$(P)$(R)JaiRawShutterSpeed PP" )
	field( OOPT,	"On Change" )
}

record( longout, "$(P)$(R)JaiRawShutterSpeed" )
{
	field( DESC,	"Numeric shutter value" )
	field( DTYP,	"stream" )
	field( DOL,     "15" )
	field( OUT,		"@JaiCm140M.proto SetShutterSpeed $(PORT).SER" )
	field( DRVL,    "0" )
	field( DRVH,    "15" )
	field( FLNK,	"$(P)$(R)JaiRawShutterSpeed_RBV" )
}

record( longin,	"$(P)$(R)JaiRawShutterSpeed_RBV" )
{
	field( DESC,	"Shutter from camera report" )
	field( DTYP,	"stream" )
	field( INP,		"@JaiCm140M.proto ReadShutterMode $(PORT).SER" )
#	field( SCAN,	"I/O Intr" )
	field( FLNK,	"$(P)$(R)JaiShutter_RBV_ASub" )
}

record( mbbo, "$(P)$(R)JaiRawShutterMode" )
{
	field( DESC,	"Numeric shutter value" )
	field( DTYP,	"stream" )
	field( OUT,		"@JaiCm140M.proto SetShutterMode $(PORT).SER" )
	field( ZRVL,	"0"	)
	field( ONVL,	"1"	)
	field( ZRST,	"Trig"		)
	field( ONST,	"FreeRun"	)
	field( FLNK,	"$(P)$(R)JaiRawShutterMode_RBV" )
}
record( mbbi,	"$(P)$(R)JaiRawShutterMode_RBV" )
{
	field( DESC,	"Camera shutter mode" )
	field( DTYP,	"stream" )
	field( INP,		"@JaiCm140M.proto ReadFreeRun $(PORT).SER " )
#	field( SCAN,	"I/O Intr" )
	field( ZRVL,	"0"	)
	field( ONVL,	"1"	)
	field( ZRST,	"Trig"		)
	field( ONST,	"FreeRun"	)
	field( FLNK,	"$(P)$(R)JaiShutter_RBV_ASub" )
}

record( aSub, "$(P)$(R)JaiShutter_ASub" )
{
	field( SCAN,	"Passive" )
	field( SNAM,	"JaiCm140MShutter_Process" )
	field( FTA,		"DOUBLE")	field( INPA,	"$(P)$(R)AcquireTime PP MS" )
	field( FTB,		"LONG"	)	field( INPB,	"$(P)$(R)TriggerMode PP MS" )
	field( FTC,		"DOUBLE")	field( INPC,	"$(PW_SCALE=1e9)" )

	field( FTVA,	"LONG"	)	field( OUTA,	"$(P)$(R)JaiRawShutterSpeed PP MS" )
	field( FTVB,	"LONG"	)	field( OUTB,	"$(P)$(R)JaiRawShutterMode  PP MS" )
	field( FTVC,	"DOUBLE")	field( OUTC,	"$(PGP):Ch$(PGP_LANE):Feb$(PGP_LANE):PulseWidth CA NMS" )
}

record( aSub, "$(P)$(R)JaiShutter_RBV_ASub" )
{
	field( SCAN,	"Passive" )
	field( SNAM,	"JaiCm140MShutter_RBV_Process" )
	field( FTA,		"LONG"	)	field( INPA,	"$(P)$(R)JaiRawShutterSpeed_RBV NPP MS" )
	field( FTB,		"LONG"	)	field( INPB,	"$(P)$(R)JaiRawShutterMode_RBV    NPP MS" )
	field( FTC,		"DOUBLE")	field( INPC,	"$(PGP):Ch$(PGP_LANE):Feb$(PGP_LANE):PulseWidth_RBV CPP MS" )
	field( FTD,		"DOUBLE")	field( INPD,	"$(PW_SCALE=1e9)" )

	field( FTVA,	"DOUBLE")	field( OUTA,	"$(P)$(R)CamAcquireTime_RBV PP MS" )
	field( FTVB,	"LONG"	)	field( OUTB,	"$(P)$(R)CamTriggerMode_RBV PP MS" )
}


record( bo,	"$(P)$(R)JaiAutoGain" )
{
	field( DESC,	"Not supported" )
	field( DOL,		"0" )
	field( ZNAM,	"Disabled" )
	field( ONAM,	"Enabled" )
}

# Effective transmit rate is 25Mhz PixelClock
record( ao, "$(P)$(R)XmitRate" )
{
    field( DOL,  "25.0e6" )
    field( EGU,  "Px/Sec" )
    field( PREC, "3" )
    field( PINI, "YES" )
    info( autosaveFields, "VAL" )
}   

# Set SerThrottle to 30000
record( longout, "$(P)$(R)Jai:SerThrottle" )
{
	field( DOL,  "30000" )
	field( OUT,  "$(P)$(R)Feb$(PGP_LANE):SerThrottle" )
}

# Possible TODO: Add support for
#	WB,WB?	Set and read white balance, Color cameras only
#	OFS,OFS? Set and read black offset, Color cameras only
#	USIx;y and USI?x	Set and read user defined integers
#	USSx;y and USS?x	Set and read user defined strings
#	RQ		Initiate soft request readout
#	ROIx;y;w;h		Set ROI x offset, y offset, width, and height

# Include a serialMonitor.template monitor
# This should be the first PV you process in the CamReConfigSeq
substitute "MON_SCAN=10 second"
#substitute "SER_OK_PV= $(P)$(R)JaiReport"
#include "serialMonitor.template"

# 1 second RBV monitors
substitute "MON_SCAN=1 second"

# 10 second RBV monitors
substitute "MON_SCAN=10 second"
substitute "MON_DISABLED=0"
#substitute "MON_PV= $(P)$(R)JaiRawShutterSpeed_RBV"
#include "rbvMonitor.template"

# Put monitors
substitute "MON_SCAN=1 second"
substitute "MON_DISABLED=1"
#substitute "MON_PV= $(P)$(R)JaiGain"
#include "putMonitor.template"
